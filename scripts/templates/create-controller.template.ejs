/**
 *  <?= controllerName ?> Controller
 *  Created by create-controller script  
 **/
 var mongoose = require('mongoose'),	
	<?= modelName ?> = mongoose.model('<?= modelName ?>'),
	pager = require('../utils/pager.js'),
	ViewTemplatePath;

<?
	var modelVariable = modelName.toLowerCase();
	var basePath = modelName.toLowerCase();
	var basePathPlural = controllerName.toLowerCase();
?>

module.exports = function(app,templatePath) {
		
	app.param(['to', 'from'], function(n){ return parseInt(n, 10); });
	app.get('/<?= basePathPlural ?>.:format?', index);	
	app.get('/<?= basePathPlural ?>/:from-:to.:format?', index);		
    app.post('/<?= basePathPlural ?>', create);
    app.get('/<?= basePath ?>/:id.:format?', show);
    app.get('/<?= basePath ?>/:id/edit', edit);
    app.put('/<?= basePath ?>/:id.:format?', update);    
    app.del('/<?= basePath ?>/:id.:format?', destroy);    
    ViewTemplatePath = templatePath;
    
}

// /<?= basePathPlural ?>
function index(req, res, next) {
	  	 
	  var from = req.params.from ? req.params.from - 1 : 0;
	  var to = req.params.to ? req.params.to : 10;
      var total = 0;
      
      <?= modelName ?>.count({}, function (err, count) {
    	total = count;  
    	var pagerHtml = pager.render(from,to,total,'/<?= basePathPlural ?>');    	
                  
		  <?= modelName ?>.find({})
		  	.sort('name', 1)
		  	.skip(from).limit(to)
		  	.find(function (err, <?= basePathPlural ?>) {
			
			  if(err) return next(err);
			  
		      switch (req.params.format) {
		        case 'json':	          
		          res.send(<?= basePathPlural ?>.map(function(u) {
		              return u.toObject();
		          }));
		          break;
	
		        default:
		        	console.log("Rendering ...");
		        	res.render(ViewTemplatePath,{<?= basePathPlural ?>:<?= basePathPlural ?>,pagerHtml:pagerHtml});
		      }
		      
		  });
      
      });
      	  	
}

  // /<?= basePathPlural ?>/:id
function show(req, res, next) {	  		  
		
	  <?= modelName ?>.findById(req.params.id, function(err, <?= modelVariable ?>) {
		  
		  if(err) return next(err);
		  
	      switch (req.params.format) {
	        case 'json':
	          res.send(<?= modelVariable ?>.toObject());
	          break;

	        default:
	        	res.render(ViewTemplatePath + "/show",{<?= modelVariable ?>:<?= modelVariable ?>});
	      }
	      
	  });
	      
};
  
  // /<?= basePathPlural ?>/:id/edit
function  edit(req, res, next){
	  <?= modelName ?>.findById(req.params.id, function(err, <?= modelVariable ?>) {
		  if(err) return next(err);
		  res.render(ViewTemplatePath + "/edit",{<?= modelVariable ?>:<?= modelVariable ?>});
	});
};
  
  // PUT /<?= basePathPlural ?>/:id  
function update(req, res, next){
    
    <?= modelName ?>.findById(req.params.id, function(err, <?= modelVariable ?>) {
        
    	if (!<?= modelVariable ?>) return next(err);
        
    	<?= modelVariable ?>.name = req.body.<?= modelVariable ?>.name;
    	
        <?= modelVariable ?>.save(function(err) {
        
    	  if (err) {
    		  console.log(err);
        	  req.flash('error','Could not update <?= modelVariable ?>: ' + err);
          	  res.redirect('/<?= basePathPlural ?>');
          	  return;
    	  }
    		
          switch (req.params.format) {
            case 'json':
              res.send(<?= modelVariable ?>.toObject());
              break;
            default:
              req.flash('info', '<?= modelName ?> updated');
              res.redirect('/<?= modelVariable ?>/' + req.params.id);
          }
        });
      });
};
  
// POST /<?= basePathPlural ?>
function create(req, res, next){
	  
	  var <?= modelVariable ?> = new <?= modelName ?>(req.body.<?= modelVariable ?>);
	  
	  <?= modelVariable ?>.save(function(err) {
	   
		if (err) {
    	  req.flash('error','Could not create <?= modelVariable ?>: ' + err);
      	  res.redirect('/<?= basePathPlural ?>');
      	  return;
		}

	    switch (req.params.format) {
	      case 'json':
	        res.send(<?= modelVariable ?>.toObject());
	        break;

	      default:
	    	  req.flash('info','<?= modelName ?> created');
	      	  res.redirect('/<?= modelVariable ?>/' + <?= modelVariable ?>.id);
		 }
	  });	  
	  
};
  
// DEL /<?= basePathPlural ?>
// Always comes in as an ajax request in this model - never redirect
function destroy(req, res, next){
	  
	  <?= modelName ?>.findById(req.params.id, function(err, <?= modelVariable ?>) {
	        
	    	if (!<?= modelVariable ?>) { 
  	    	  	req.flash('error','Unable to locate the <?= modelVariable ?> to delete!');
	    		res.send('false'); 
	    		return false; 
	    	};
	    		    
	    	<?= modelVariable ?>.remove(function(err) {
    		  if(err) {
    	    	  req.flash('error','There was an error deleting the <?= modelVariable ?>!');
    			  res.send('false');
    		  } else {
    	    	  req.flash('info','<?= modelName ?> deleted');
    			  res.send('true');
    		  }    	          
   	      	}); 
	  });
	  
};